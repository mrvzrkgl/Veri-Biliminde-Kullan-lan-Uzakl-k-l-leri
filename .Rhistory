library(rmdformats)
ev <- c(30, 40)
otel <- c(70, 90)
oklid <- sqrt((ev[1] - otel[1])^2 + (ev[2] - otel[2])^2)
oklid
library(tidyverse)
ggplot() +
geom_point(aes(x = ev[1], y = ev[2]), color = "red", size = 3) +
geom_text(aes(x = ev[1], y = ev[2], label = "Ev"), vjust = -2) +
geom_point(aes(x = otel[1], y = otel[2]), color = "blue", size = 3) +
geom_text(aes(x = otel[1], y = otel[2], label = "Otel"), vjust = -2) +
geom_segment(aes(x = ev[1], y = ev[2], xend = otel[1], yend = otel[2]),
color = "black", size = 1) +
geom_text(aes(x = (ev[1] + otel[1])/2, y = (ev[2] + otel[2])/2,
label = paste(round(oklid, 2), " birim")), vjust = -3) +
xlim(0, 100) + ylim(0, 100) +
xlab("X Koordinatı") + ylab("Y Koordinatı")
library(tidyverse)
ggplot() +
geom_point(aes(x = ev[1], y = ev[2]), color = "#8B475D", size = 3) +
geom_text(aes(x = ev[1], y = ev[2], label = "Ev"), vjust = -2) +
geom_point(aes(x = otel[1], y = otel[2]), color = "#668B8B", size = 3) +
geom_text(aes(x = otel[1], y = otel[2], label = "Otel"), vjust = -2) +
geom_segment(aes(x = ev[1], y = ev[2], xend = otel[1], yend = otel[2]),
color = "black", size = 1) +
geom_text(aes(x = (ev[1] + otel[1])/2, y = (ev[2] + otel[2])/2,
label = paste(round(oklid, 2), " birim")), vjust = -3) +
xlim(0, 100) + ylim(0, 100) +
xlab("X Koordinatı") + ylab("Y Koordinatı")
library(tidyverse)
ggplot() +
geom_point(aes(x = ev[1], y = ev[2]), color = "#8B475D", size = 5) +
geom_text(aes(x = ev[1], y = ev[2], label = "Ev"), vjust = -2) +
geom_point(aes(x = otel[1], y = otel[2]), color = "#668B8B", size = 5) +
geom_text(aes(x = otel[1], y = otel[2], label = "Otel"), vjust = -2) +
geom_segment(aes(x = ev[1], y = ev[2], xend = otel[1], yend = otel[2]),
color = "black", size = 1) +
geom_text(aes(x = (ev[1] + otel[1])/2, y = (ev[2] + otel[2])/2,
label = paste(round(oklid, 2), " birim")), vjust = -3) +
xlim(0, 100) + ylim(0, 100) +
xlab("X Koordinatı") + ylab("Y Koordinatı")
ev <- c(30, 40)
otel <- c(70, 90)
cosine <- sum(ev*otel) / (sqrt(sum(ev^2)) * sqrt(sum(otel^2)))
cosine
ev <- c(30, 40)
otel <- c(70, 90)
manhattan <- sum(abs(ev - otel))
manhattan
ev <- c(30, 40)
otel <- c(70, 90)
chebyshev <- max(abs(ev - otel))
chebyshev
ggplot() +
geom_point(aes(x = ev[1], y = ev[2]), color = "#8B475D", size = 5) +
geom_text(aes(x = ev[1], y = ev[2], label = "Ev"), vjust = -2) +
geom_point(aes(x = otel[1], y = otel[2]), color = "#668B8B", size = 5) +
geom_text(aes(x = otel[1], y = otel[2], label = "Otel"), vjust = -2) +
geom_segment(aes(x = ev[1], y = ev[2], xend = otel[1], yend = otel[2]),
color = "black", size = 1) +
geom_text(aes(x = (ev[1] + otel[1])/2, y = (ev[2] + otel[2])/2,
label = paste(round(chebyshev, 2), " birim")), vjust = -3) +
xlim(0, 100) + ylim(0, 100) +
xlab("X Koordinatı") + ylab("Y Koordinatı")
ev <- c(30, 40)
otel <- c(70, 90)
spearman <- cor(ev, otel, method = "spearman")
spearman
ev <- c(6, 5, 3, 1)
otel <- c(1, 4, 7, 9)
veri <- data.frame(ev, otel)
kovaryans <- cov(veri)
mahalanobis <- mahalanobis(veri, center = colMeans(veri), cov = kovaryans)
mahalanobis
ev <- c(30, 40)
otel <- c(70, 90)
canberra <- sum(abs(ev - otel) / (abs(ev) + abs(otel)))
canberra
ogrenci_1 <- c(45, 80, 60, 90, 30)
ogrenci_2 <- c(60, 70, 40, 45, 10)
ogrenci_1_binary <- ifelse(ogrenci_1 >= 50, 1, 0)
ogrenci_2_binary <- ifelse(ogrenci_2 >= 50, 1, 0)
jaccard <- sum(ogrenci_1_binary & ogrenci_2_binary) / sum(ogrenci_1_binary | ogrenci_2_binary)
jaccard
ogrenci_1 <- c(45, 80, 60, 90, 30)
ogrenci_2 <- c(60, 70, 40, 45, 10)
# Öğrenci notlarını 0'larla birleştirerek aynı uzunluğa getirme
max_len <- max(length(ogrenci_1), length(ogrenci_2))
ogrenci_1_pad <- c(ogrenci_1, rep(0, max_len - length(ogrenci_1)))
ogrenci_2_pad <- c(ogrenci_2, rep(0, max_len - length(ogrenci_2)))
# Hamming uzaklığını hesaplama
hamming <- sum(ogrenci_1_pad != ogrenci_2_pad)
hamming
ogrenci_1 <- c(45, 80, 60, 90, 30)
ogrenci_2 <- c(60, 70, 40, 45, 10)
# Öğrenci notlarını 0'larla birleştirerek aynı uzunluğa getirme
max_len <- max(length(ogrenci_1), length(ogrenci_2))
ogrenci_1_new <- c(ogrenci_1, rep(0, max_len - length(ogrenci_1)))
ogrenci_2_new <- c(ogrenci_2, rep(0, max_len - length(ogrenci_2)))
# Hamming uzaklığını hesaplama
hamming <- sum(ogrenci_1_new != ogrenci_2_new)
hamming
ogrenci_1 <- c(45, 80, 60, 90, 30)
ogrenci_2 <- c(60, 70, 40, 45, 10)
ogrenci_1_binary <- ifelse(ogrenci_1 >= 50, 1, 0)
ogrenci_2_binary <- ifelse(ogrenci_2 >= 50, 1, 0)
num <- sum(ogrenci_1_binary & ogrenci_2_binary)
denom <- sum(ogrenci_1_binary) + sum(ogrenci_2_binary)
sorensen_dice <- 2 * num / denom
sorensen_dice
ogrenci_1 <- c(45, 80, 60, 90, 30)
ogrenci_2 <- c(60, 70, 40, 45, 10)
cor(ogrenci_1 , ogrenci_2, method = "pearson")
# stringdist paketini kullanarak hesaplama yapalım
library(stringdist)
stringdist("nominal", "ordinal", method = "lv")
# stringdist paketini kullanarak hesaplama yapalım
library(stringdist)
stringdist("nominal", "ordinal", method = "lv")
